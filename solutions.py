from Bio.Seq import Seq
from Bio import motifs

def strip_newlines(string):
    return string.translate(None, '\n')

def count_matches(seq_1, seq_2, empty_sign):
    matches = 0
    mismatches = 0
    not_aligned = 0

    for i in xrange(min(len(seq_1), len(seq_2))):
        if seq_1[i] != empty_sign and seq_2[i] != empty_sign:
            if seq_1[i] == seq_2[i]:
                matches += 1
            else:
                mismatches += 1
        elif seq_1[i] != empty_sign or seq_2[i] != empty_sign:
            not_aligned += 1

    return (matches, mismatches, not_aligned)

def print_dna_seq_matching(dna_1, dna_2):
    stripped_1 = strip_newlines(dna_1)
    stripped_2 = strip_newlines(dna_2)
    matching = count_matches(stripped_1, stripped_2, '-')
    print("Matches: " + str(matching[0]) +
          "\nMismatches: " + str(matching[1]) +
          "\nNot aligned: " + str(matching[2]))

hba1 = "------------------------------------------------------CATAAACCCTGGC------------------------------------------------------------------------------GCGCTCGCGGCCCGGCACTCTTCTGGTCCCCA-CAGACTCAGAGAGAACCCACCATGGTGC---TGTCTCCTGCCGACAAGACCAACGTCAAGGCCGCCTGGGGTAAGGTCGGCGCGCACGCTGGCGAGTATGGTGCGGAGGCCCTGGAGAGGATGTTCCTGTCCTTCCCCACCACCAAGACCTACTTCCCGCACTTCG---ACCTGAGCCACGGCTCTG---------------CCCAGGTTAAGGGCCACGGCAAGAAGGTGGCCGACGCGCTGACCAACGCCGTGGCGCACGTGGACGACATGCCCAACGCGCTGTCCGCCCTGAGCGACCTGCACGCGCACAAGCTTCGGGTGGACCCGGTCAACTTCAAGCTCCTAAGCCACTGCCTGCTGGTGACCCTGGCCGCCCACCTCCCCGCCGAGTTCACCCCTGCGGTGCACGCCTCCCTGGACAAGTTCCTGGCTTCTGTGAGCACCGTGCTGACCTCCAAATACCGTTAAGCTGGAGCCTCGGTGGCCATGCTTCTTGCCCCTTGGGCCTCCCCCCAGCCCCTCCTCCCCTTCCTGCACCCGTACCCCCGTGGTC-TTTGAATAAAGTCTGAGTGGGCGGCAAAAAAAAAAAAAAAAAAAAAA----------"

hbb = "-------------------------------------------------------------------------------------------------------------------------------------------------ACATTTGC-TTCTGACACAACTGTGTTCACTAGCAACCTCAAA---CAGACACCATGGTGCATCTGACTCCTGAGGAGAAGTCTGCCGTTACTGCCCTGTGGGGCAAGGTGAACGTGGATGAAG------TTGGTGGTGAGGCCCTGGGCAGGCTGCTGGTGGTCTACCCTTGGACCCAGAGGTTCTTTGAGTCCTTTGGGGATCTGTCCACTCCTGATGCTGTTATGGGCAACCCTAAGGTGAAGGCTCATGGCAAGAAAGTGCTCGGTGCCTTTAGTGATGGCCTGGCTCACCTGGACAACCTCAAGGGCACCTTTGCCACACTGAGTGAGCTGCACTGTGACAAGCTGCACGTGGATCCTGAGAACTTCAGGCTCCTGGGCAACGTGCTGGTCTGTGTGCTGGCCCATCACTTTGGCAAAGAATTCACCCCACCAGTGCAGGCTGCCTATCAGAAAGTGGTGGCTGGTGTGGCTAATGCCCTGGCCCACAAGTATCACTAAGCTCG------CTTTCTTGCTGTCCAATTTCTATTAAAGGTTCCTTTGTTCCCTAAGTCCAACTACTAAACTGGGGGATATTATGAAGGGCCTTGAGCATCTGGATTCTGCCTAATAAAAAACATTTATTTTCATTGC-----"

hbd = "AGGGCAAGTTAAGGGAATAGTGGAATGAAGGTTCATTTTTCATTCTCACAAACTAATGAAACCCTGCTTATCTTAAACCAACCTGCTCACTGGAGCAGGGAGGACAGGACCAGCATAAAAGGCAGGGCAGAGTCGACTGTTGCTTACACTTTC-TTCTGACATAACAGTGTTCACTAGCAACCTCAAA---CAGACACCATGGTGCATCTGACTCCTGAGGAGAAGACTGCTGTCAATGCCCTGTGGGGCAAAGTGAACGTGGATGCAG------TTGGTGGTGAGGCCCTGGGCAGATTACTGGTGGTCTACCCTTGGACCCAGAGGTTCTTTGAGTCCTTTGGGGATCTGTCCTCTCCTGATGCTGTTATGGGCAACCCTAAGGTGAAGGCTCATGGCAAGAAGGTGCTAGGTGCCTTTAGTGATGGCCTGGCTCACCTGGACAACCTCAAGGGCACTTTTTCTCAGCTGAGTGAGCTGCACTGTGACAAGCTGCACGTGGATCCTGAGAACTTCAGGCTCTTGGGCAATGTGCTGGTGTGTGTGCTGGCCCGCAACTTTGGCAAGGAATTCACCCCACAAATGCAGGCTGCCTATCAGAAGGTGGTGGCTGGTGTGGCTAATGCCCTGGCTCACAAGTACCATTGAGATC-------CTGGACTGTTTCCTGATAACCATAAGAAGACCCTATTTCCCTAGATTCTATTTTCTGAACTTGGGAACACAATG-CCTACTTCAAGGGTATGGCTTCTGCCTAATAAAGAATGTTCAGCTCAACTTCCTGAT"

hbg1 = "-------------------------------------------------------------------------------------------------------------------------------------------------ACACTCGC-TTCTGGAACGTCTGAGGTTATCAATAAGCTCCTAGTCCAGACGCCATGGGTCATTTCACAGAGGAGGACAAGGCTACTATCACAAGCCTGTGGGGCAAGGTGAATGTGGAAGATG------CTGGAGGAGAAACCCTGGGAAGGCTCCTGGTTGTCTACCCATGGACCCAGAGGTTCTTTGACAGCTTTGGCAACCTGTCCTCTGCCTCTGCCATCATGGGCAACCCCAAAGTCAAGGCACATGGCAAGAAGGTGCTGACTTCCTTGGGAGATGCCACAAAGCACCTGGATGATCTCAAGGGCACCTTTGCCCAGCTGAGTGAACTGCACTGTGACAAGCTGCATGTGGATCCTGAGAACTTCAAGCTCCTGGGAAATGTGCTGGTGACCGTTTTGGCAATCCATTTCGGCAAAGAATTCACCCCTGAGGTGCAGGCTTCCTGGCAGAAGATGGTGACTGCAGTGGCCAGTGCCCTGTCCTCCAGATACCACTGAGCTC-------ACTGCCCATGATTCAGAGCTTTCAAGGATAGGCTTTATTCTGCAAGC----------------------------AATACAAATAATAAATCTATTCTGCTGAGAGATCAC---------------------"

ins = "------------------AGCCCTCCAGGACAGGCTGC-ATCAGAAGAGGCCATCAAGCA-GATCACTGTCCTTCTGCCATGGCCCTGTGGATGCGCCTCCTGCCCCTGCTGGCGCTGCTGGCCCTCTGGGGACCTGACCCAGCCGCAGCCTTTGTGAACCAACACCTGTGCGGCTCACACCTGGTGGAAGCTCTCTACCTAGTGTGCGGGGAACGAGGCTTCTTCTACACACCCAAGACCCGCCGGGAGGCAGAGGACCTGCAGGTGGGGCAGGTGGAGCTGGGCGGGGGCCCTGGTGCAGGCAGCCTGCAGCCCTTGGCCCTGGAGGGGTCCCTGCAGAAGCGTGGCATTGTGGAACAATGCTGTACCAGCATCTGCTCCCTCTACCAGCTGGAGAACTACTGCAACTAGACGCAGCCCGCAGGCAGCCCCACACCCGCCGCCTCCTGCACCGAGAGAGATGGAATAAAGCCCTTGAACCAGC----AAAA"

ins2= "GGGGACCCAGTAACCACCAGCCCTAAGTGATCCGCTACAATCAAAAACCATCAGCAAGCAGGAAGGTTATTGTTTCAACATGGCCCTGTGGATGCGCTTCCTGCCCCTGCTGGCCCTGCTCTTCCTCTGGGAGTCCCACCCCACCCAGGCTTTTGTCAAGCAGCACCTTTGTGGTTCCCACCTGGTGGAGGCTCTCTACCTGGTGTGTGGGGAGCGTGGCTTCTTCTACACACCCATGTCCCGCCGTGAAGTGGAGGACCCACAAGTGGCACAACTGGAGCTGGGTGGAGGCCCGGGAGCAGGTGACCTTCAGACCTTGGCACTGGAGGTGGCCCAGCAGAAGCGTGGCATTGTAGATCAGTGCTGCACCAGCATCTGCTCCCTCTACCAGCTGGAGAACTACTGCAACTAGACCCA--CCACTACCCAGCCTAC--------CCCTCTGCAAT----------GAATAAAACCTTTGAATGAGCACAAAAAA"


exercise5instances = [
    Seq("AGATAA"),
    Seq("TGATAA"),
    Seq("AGATAG"),
    Seq("TGATAG"),
    Seq("TGATCA"),
    Seq("TTATCA"),
]

ex5motif = motifs.create(exercise5instances)

ex5PWM = ex5motif.pwm

ex5logo_heights = ex5motif.counts.normalize(pseudocounts = 1.0)

ex5PSSM = ex5logo_heights.log_odds()
